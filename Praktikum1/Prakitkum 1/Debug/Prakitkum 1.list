
Prakitkum 1.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000001dc  080001c4  080001c4  000011c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080003a0  080003a8  000013a8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080003a0  080003a0  000013a8  2**0
                  CONTENTS
  4 .ARM          00000000  080003a0  080003a0  000013a8  2**0
                  CONTENTS
  5 .preinit_array 00000000  080003a0  080003a8  000013a8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080003a0  080003a0  000013a0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  080003a4  080003a4  000013a4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  000013a8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  080003a8  00002000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  080003a8  0000201c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000013a8  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000395  00000000  00000000  000013d8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000016e  00000000  00000000  0000176d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000000b8  00000000  00000000  000018e0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 0000007b  00000000  00000000  00001998  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  000013a2  00000000  00000000  00001a13  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000a6e  00000000  00000000  00002db5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000043b5  00000000  00000000  00003823  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  00007bd8  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000208  00000000  00000000  00007c1c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000006a  00000000  00000000  00007e24  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001c4 <__do_global_dtors_aux>:
 80001c4:	b510      	push	{r4, lr}
 80001c6:	4c05      	ldr	r4, [pc, #20]	@ (80001dc <__do_global_dtors_aux+0x18>)
 80001c8:	7823      	ldrb	r3, [r4, #0]
 80001ca:	b933      	cbnz	r3, 80001da <__do_global_dtors_aux+0x16>
 80001cc:	4b04      	ldr	r3, [pc, #16]	@ (80001e0 <__do_global_dtors_aux+0x1c>)
 80001ce:	b113      	cbz	r3, 80001d6 <__do_global_dtors_aux+0x12>
 80001d0:	4804      	ldr	r0, [pc, #16]	@ (80001e4 <__do_global_dtors_aux+0x20>)
 80001d2:	f3af 8000 	nop.w
 80001d6:	2301      	movs	r3, #1
 80001d8:	7023      	strb	r3, [r4, #0]
 80001da:	bd10      	pop	{r4, pc}
 80001dc:	20000000 	.word	0x20000000
 80001e0:	00000000 	.word	0x00000000
 80001e4:	08000388 	.word	0x08000388

080001e8 <frame_dummy>:
 80001e8:	b508      	push	{r3, lr}
 80001ea:	4b03      	ldr	r3, [pc, #12]	@ (80001f8 <frame_dummy+0x10>)
 80001ec:	b11b      	cbz	r3, 80001f6 <frame_dummy+0xe>
 80001ee:	4903      	ldr	r1, [pc, #12]	@ (80001fc <frame_dummy+0x14>)
 80001f0:	4803      	ldr	r0, [pc, #12]	@ (8000200 <frame_dummy+0x18>)
 80001f2:	f3af 8000 	nop.w
 80001f6:	bd08      	pop	{r3, pc}
 80001f8:	00000000 	.word	0x00000000
 80001fc:	20000004 	.word	0x20000004
 8000200:	08000388 	.word	0x08000388

08000204 <GPIO_Init_PortC>:
 ******************************************************************************************/

/*
 * Initialize the configuration of a PinA
 */
void GPIO_Init_PortC(uint8_t pGPIO_PinNumber, uint8_t pGPIO_PinMode){
 8000204:	b480      	push	{r7}
 8000206:	b083      	sub	sp, #12
 8000208:	af00      	add	r7, sp, #0
 800020a:	4603      	mov	r3, r0
 800020c:	460a      	mov	r2, r1
 800020e:	71fb      	strb	r3, [r7, #7]
 8000210:	4613      	mov	r3, r2
 8000212:	71bb      	strb	r3, [r7, #6]
	// TODO: Enable clock for PortC
	*((volatile uint32_t*) (RCC_BASEADDR + 0x30U)) |= (SET<<2);
 8000214:	4b0b      	ldr	r3, [pc, #44]	@ (8000244 <GPIO_Init_PortC+0x40>)
 8000216:	681b      	ldr	r3, [r3, #0]
 8000218:	4a0a      	ldr	r2, [pc, #40]	@ (8000244 <GPIO_Init_PortC+0x40>)
 800021a:	f043 0304 	orr.w	r3, r3, #4
 800021e:	6013      	str	r3, [r2, #0]
	// TODO: Set mode bits for pinNumber on PortC
	*((volatile uint32_t*) (GPIOC_BASEADDR)) |= (pGPIO_PinMode << (pGPIO_PinNumber*2));
 8000220:	4b09      	ldr	r3, [pc, #36]	@ (8000248 <GPIO_Init_PortC+0x44>)
 8000222:	681b      	ldr	r3, [r3, #0]
 8000224:	79b9      	ldrb	r1, [r7, #6]
 8000226:	79fa      	ldrb	r2, [r7, #7]
 8000228:	0052      	lsls	r2, r2, #1
 800022a:	fa01 f202 	lsl.w	r2, r1, r2
 800022e:	4611      	mov	r1, r2
 8000230:	4a05      	ldr	r2, [pc, #20]	@ (8000248 <GPIO_Init_PortC+0x44>)
 8000232:	430b      	orrs	r3, r1
 8000234:	6013      	str	r3, [r2, #0]
}
 8000236:	bf00      	nop
 8000238:	370c      	adds	r7, #12
 800023a:	46bd      	mov	sp, r7
 800023c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000240:	4770      	bx	lr
 8000242:	bf00      	nop
 8000244:	40023830 	.word	0x40023830
 8000248:	40020800 	.word	0x40020800

0800024c <GPIO_ToggleOutputPinC>:
}

/*
 * Toggle value of PinC
 */
void GPIO_ToggleOutputPinC(uint8_t pGPIO_PinNumber){
 800024c:	b480      	push	{r7}
 800024e:	b083      	sub	sp, #12
 8000250:	af00      	add	r7, sp, #0
 8000252:	4603      	mov	r3, r0
 8000254:	71fb      	strb	r3, [r7, #7]
	 // TODO: Toggle pin on PortC
	*((volatile uint32_t*) (GPIOC_BASEADDR+0x14U)) ^= (1<<pGPIO_PinNumber);
 8000256:	4b08      	ldr	r3, [pc, #32]	@ (8000278 <GPIO_ToggleOutputPinC+0x2c>)
 8000258:	681b      	ldr	r3, [r3, #0]
 800025a:	79fa      	ldrb	r2, [r7, #7]
 800025c:	2101      	movs	r1, #1
 800025e:	fa01 f202 	lsl.w	r2, r1, r2
 8000262:	4611      	mov	r1, r2
 8000264:	4a04      	ldr	r2, [pc, #16]	@ (8000278 <GPIO_ToggleOutputPinC+0x2c>)
 8000266:	404b      	eors	r3, r1
 8000268:	6013      	str	r3, [r2, #0]

}
 800026a:	bf00      	nop
 800026c:	370c      	adds	r7, #12
 800026e:	46bd      	mov	sp, r7
 8000270:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000274:	4770      	bx	lr
 8000276:	bf00      	nop
 8000278:	40020814 	.word	0x40020814

0800027c <delay>:
#include "GPIO_Driver.h"

/*
 * delay function
 */
void delay(void){
 800027c:	b480      	push	{r7}
 800027e:	b083      	sub	sp, #12
 8000280:	af00      	add	r7, sp, #0
	for (volatile uint32_t i = 0; i < 500000; i++);
 8000282:	2300      	movs	r3, #0
 8000284:	607b      	str	r3, [r7, #4]
 8000286:	e002      	b.n	800028e <delay+0x12>
 8000288:	687b      	ldr	r3, [r7, #4]
 800028a:	3301      	adds	r3, #1
 800028c:	607b      	str	r3, [r7, #4]
 800028e:	687b      	ldr	r3, [r7, #4]
 8000290:	4a04      	ldr	r2, [pc, #16]	@ (80002a4 <delay+0x28>)
 8000292:	4293      	cmp	r3, r2
 8000294:	d9f8      	bls.n	8000288 <delay+0xc>
}
 8000296:	bf00      	nop
 8000298:	bf00      	nop
 800029a:	370c      	adds	r7, #12
 800029c:	46bd      	mov	sp, r7
 800029e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002a2:	4770      	bx	lr
 80002a4:	0007a11f 	.word	0x0007a11f

080002a8 <oneB>:
}

/*
 * Toggle external LEDs on PC5, PC6 and PC8
 */
void oneB(){
 80002a8:	b580      	push	{r7, lr}
 80002aa:	af00      	add	r7, sp, #0
	// TODO: Initialize PC5, PC6 and PC8:
	GPIO_Init_PortC(5,1);
 80002ac:	2101      	movs	r1, #1
 80002ae:	2005      	movs	r0, #5
 80002b0:	f7ff ffa8 	bl	8000204 <GPIO_Init_PortC>
	GPIO_Init_PortC(6,1);
 80002b4:	2101      	movs	r1, #1
 80002b6:	2006      	movs	r0, #6
 80002b8:	f7ff ffa4 	bl	8000204 <GPIO_Init_PortC>
	GPIO_Init_PortC(8,1);
 80002bc:	2101      	movs	r1, #1
 80002be:	2008      	movs	r0, #8
 80002c0:	f7ff ffa0 	bl	8000204 <GPIO_Init_PortC>
	while(1){
		// TODO: Toggle PC5, PC6 and PC8:
		GPIO_ToggleOutputPinC(5);
 80002c4:	2005      	movs	r0, #5
 80002c6:	f7ff ffc1 	bl	800024c <GPIO_ToggleOutputPinC>
		GPIO_ToggleOutputPinC(6);
 80002ca:	2006      	movs	r0, #6
 80002cc:	f7ff ffbe 	bl	800024c <GPIO_ToggleOutputPinC>
		GPIO_ToggleOutputPinC(8);
 80002d0:	2008      	movs	r0, #8
 80002d2:	f7ff ffbb 	bl	800024c <GPIO_ToggleOutputPinC>
		delay();
 80002d6:	f7ff ffd1 	bl	800027c <delay>
		GPIO_ToggleOutputPinC(5);
 80002da:	bf00      	nop
 80002dc:	e7f2      	b.n	80002c4 <oneB+0x1c>

080002de <main>:
}

/*
 * main function
 */
int main(void){
 80002de:	b580      	push	{r7, lr}
 80002e0:	af00      	add	r7, sp, #0
	// TODO: Call functions to toggle LEDs
	oneB();
 80002e2:	f7ff ffe1 	bl	80002a8 <oneB>
 80002e6:	2300      	movs	r3, #0
}
 80002e8:	4618      	mov	r0, r3
 80002ea:	bd80      	pop	{r7, pc}

080002ec <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80002ec:	480d      	ldr	r0, [pc, #52]	@ (8000324 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80002ee:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80002f0:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002f4:	480c      	ldr	r0, [pc, #48]	@ (8000328 <LoopForever+0x6>)
  ldr r1, =_edata
 80002f6:	490d      	ldr	r1, [pc, #52]	@ (800032c <LoopForever+0xa>)
  ldr r2, =_sidata
 80002f8:	4a0d      	ldr	r2, [pc, #52]	@ (8000330 <LoopForever+0xe>)
  movs r3, #0
 80002fa:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002fc:	e002      	b.n	8000304 <LoopCopyDataInit>

080002fe <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002fe:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000300:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000302:	3304      	adds	r3, #4

08000304 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000304:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000306:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000308:	d3f9      	bcc.n	80002fe <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800030a:	4a0a      	ldr	r2, [pc, #40]	@ (8000334 <LoopForever+0x12>)
  ldr r4, =_ebss
 800030c:	4c0a      	ldr	r4, [pc, #40]	@ (8000338 <LoopForever+0x16>)
  movs r3, #0
 800030e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000310:	e001      	b.n	8000316 <LoopFillZerobss>

08000312 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000312:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000314:	3204      	adds	r2, #4

08000316 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000316:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000318:	d3fb      	bcc.n	8000312 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800031a:	f000 f811 	bl	8000340 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800031e:	f7ff ffde 	bl	80002de <main>

08000322 <LoopForever>:

LoopForever:
  b LoopForever
 8000322:	e7fe      	b.n	8000322 <LoopForever>
  ldr   r0, =_estack
 8000324:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000328:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800032c:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000330:	080003a8 	.word	0x080003a8
  ldr r2, =_sbss
 8000334:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000338:	2000001c 	.word	0x2000001c

0800033c <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800033c:	e7fe      	b.n	800033c <ADC_IRQHandler>
	...

08000340 <__libc_init_array>:
 8000340:	b570      	push	{r4, r5, r6, lr}
 8000342:	4d0d      	ldr	r5, [pc, #52]	@ (8000378 <__libc_init_array+0x38>)
 8000344:	4c0d      	ldr	r4, [pc, #52]	@ (800037c <__libc_init_array+0x3c>)
 8000346:	1b64      	subs	r4, r4, r5
 8000348:	10a4      	asrs	r4, r4, #2
 800034a:	2600      	movs	r6, #0
 800034c:	42a6      	cmp	r6, r4
 800034e:	d109      	bne.n	8000364 <__libc_init_array+0x24>
 8000350:	4d0b      	ldr	r5, [pc, #44]	@ (8000380 <__libc_init_array+0x40>)
 8000352:	4c0c      	ldr	r4, [pc, #48]	@ (8000384 <__libc_init_array+0x44>)
 8000354:	f000 f818 	bl	8000388 <_init>
 8000358:	1b64      	subs	r4, r4, r5
 800035a:	10a4      	asrs	r4, r4, #2
 800035c:	2600      	movs	r6, #0
 800035e:	42a6      	cmp	r6, r4
 8000360:	d105      	bne.n	800036e <__libc_init_array+0x2e>
 8000362:	bd70      	pop	{r4, r5, r6, pc}
 8000364:	f855 3b04 	ldr.w	r3, [r5], #4
 8000368:	4798      	blx	r3
 800036a:	3601      	adds	r6, #1
 800036c:	e7ee      	b.n	800034c <__libc_init_array+0xc>
 800036e:	f855 3b04 	ldr.w	r3, [r5], #4
 8000372:	4798      	blx	r3
 8000374:	3601      	adds	r6, #1
 8000376:	e7f2      	b.n	800035e <__libc_init_array+0x1e>
 8000378:	080003a0 	.word	0x080003a0
 800037c:	080003a0 	.word	0x080003a0
 8000380:	080003a0 	.word	0x080003a0
 8000384:	080003a4 	.word	0x080003a4

08000388 <_init>:
 8000388:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800038a:	bf00      	nop
 800038c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800038e:	bc08      	pop	{r3}
 8000390:	469e      	mov	lr, r3
 8000392:	4770      	bx	lr

08000394 <_fini>:
 8000394:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000396:	bf00      	nop
 8000398:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800039a:	bc08      	pop	{r3}
 800039c:	469e      	mov	lr, r3
 800039e:	4770      	bx	lr
